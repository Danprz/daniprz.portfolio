---
import ThemeToggle from '../components/ThemeToggle';
import LanguageSelector from '../components/LanguageSelector.astro';
import MenuIcon from "./icons/MenuIcon.astro";
import { getI18N } from "../i18n";

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
const defaultLang = 'fr'

const navItems = [

  {
    title: i18n.menu.home,
    label: i18n.menu.home,
    url:  currentLocale === defaultLang ? "/#top" :`/${currentLocale}/#top`,
  },
  {
    title: i18n.menu.experience,
    label: i18n.menu.experience,
    url: currentLocale === defaultLang ? "/#experiencia" : `/${currentLocale}/#experiencia`,
  },
  {
    title: i18n.menu.skills,
    label: i18n.menu.skills,
    url: currentLocale === defaultLang ? "/#habilidades" : `/${currentLocale}/#habilidades`,
  },
  {
    title: i18n.menu.about,
    label: i18n.menu.about,
    url: currentLocale === defaultLang ? "/#sobre-mi" : `/${currentLocale}/#sobre-mi`,
  }
]
---

<header class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2">
  <span>
    <!-- Aquí puede ir tu logo o cualquier otro elemento -->  
  </span>

  <nav id="menu" class="hidden md:flex gap-x-8 font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center">
    {navItems.map((link) => (
      <a
        class="relative block px-2 py-2 transition hover:text-green-800 dark:hover:text-green-200/90"
        aria-label={link.label}
        href={link.url}
      >
        {link.title}
      </a>
    ))}
    <ThemeToggle client:only />
    <LanguageSelector />
  </nav>

  <div class="md:hidden flex items-center gap-4">
    <ThemeToggle client:only />
    <LanguageSelector />
    <button id="menu-toggle" aria-label="Toggle Menu">
      <MenuIcon />
    </button>
  </div>

  <div id="mobile-menu" class="hidden fixed  inset-0 z-20 flex flex-col items-center justify-center bg-gray-500 text-neutral-950">
    <button id="menu-close" aria-label="Close Menu" class="absolute top-4 right-4">
      <!-- Icono para cerrar el menú -->
      <svg class="h-8 w-8 text-neutral-950" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /> 
      </svg>
    </button>
    {navItems.map((link) => (
      <a
        class="block px-2 py-2 transition hover:text-green-800 dark:hover:text-green-200/90"
        aria-label={link.label}
        href={link.url}
      >
        {link.title}
      </a>
    ))}
    
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
  const menuToggle = document.getElementById('menu-toggle');
  const menuClose = document.getElementById('menu-close');
  const mobileMenu = document.getElementById('mobile-menu');

  if (menuToggle && mobileMenu) {
    menuToggle.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }

  if (menuClose && mobileMenu) {
    menuClose.addEventListener('click', () => {
      mobileMenu.classList.add('hidden');
    });

    mobileMenu.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
      });
    });
  }
});
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  div {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }
  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur dark:bg-white/10  bg-white/50 ring-white/10;
    }
  }
</style>